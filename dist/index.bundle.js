(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>u});var a=n(537),o=n.n(a),r=n(645),i=n.n(r),c=n(667),d=n.n(c),s=new URL(n(122),n.b),l=i()(o()),p=d()(s);l.push([e.id,`body {\n\tpadding: 0;\n\tmargin: 0;\n\tbackground-image: url(${p});\n\tbackground-size: cover;\n\tcolor: white;\n\tbackdrop-filter: blur(30px);\n}\nheader {\n\theight: 300px;\n\tdisplay: grid;\n\talign-content: center;\n\tbackground-color: black;\n}\np {\n\tline-height: 2;\n\tfont-size: 21px;\n\tfont-family: sans-serif;\n}\nnav {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tgap: 1rem;\n}\nnav div {\n\ttext-align: center;\n\tborder: 1px solid #000;\n\tflex: 1;\n\tfont-size: 21px;\n}\nfooter {\n\tdisplay: flex;\n\tgap: 1rem;\n\tbackground-color: black;\n\tcolor: white;\n}\nfooter div {\n\tmargin-bottom: 1rem;\n\t}\t\nheader, main, footer {\n\tpadding: 0 100px;\n}\n.active {\n\tbackground-color: #f66;\n}\n.meal {\n\tborder: 1px solid #000;\n\tmargin-top: 1rem;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tgap: 1rem;\n\theight: 200px;\n\tbackground-color: hsla(0,0%,0%,.5);\n}\n.meal:last-child {\n\tmargin-bottom: 1rem;\n}\n\n.meal div {\n\tmargin-left: 1rem;\n}\nmain div div {\n\tdisplay: block;\n}\nmain div img {\n\theight: 100%;\n}\n@media screen and (max-width: 720px) {\n\theader, main, footer {\n\t\tpadding: .5rem;\n\t}\n\t.meal {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\theight: auto;\n\t}\n}`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;CACC,UAAU;CACV,SAAS;CACT,yDAA4C;CAC5C,sBAAsB;CACtB,YAAY;CACZ,2BAA2B;AAC5B;AACA;CACC,aAAa;CACb,aAAa;CACb,qBAAqB;CACrB,uBAAuB;AACxB;AACA;CACC,cAAc;CACd,eAAe;CACf,uBAAuB;AACxB;AACA;CACC,aAAa;CACb,8BAA8B;CAC9B,SAAS;AACV;AACA;CACC,kBAAkB;CAClB,sBAAsB;CACtB,OAAO;CACP,eAAe;AAChB;AACA;CACC,aAAa;CACb,SAAS;CACT,uBAAuB;CACvB,YAAY;AACb;AACA;CACC,mBAAmB;CACnB;AACD;CACC,gBAAgB;AACjB;AACA;CACC,sBAAsB;AACvB;AACA;CACC,sBAAsB;CACtB,gBAAgB;CAChB,aAAa;CACb,8BAA8B;CAC9B,SAAS;CACT,aAAa;CACb,kCAAkC;AACnC;AACA;CACC,mBAAmB;AACpB;;AAEA;CACC,iBAAiB;AAClB;AACA;CACC,cAAc;AACf;AACA;CACC,YAAY;AACb;AACA;CACC;EACC,cAAc;CACf;CACA;EACC,aAAa;EACb,sBAAsB;EACtB,YAAY;CACb;AACD",sourcesContent:["body {\n\tpadding: 0;\n\tmargin: 0;\n\tbackground-image: url(images/background.jpg);\n\tbackground-size: cover;\n\tcolor: white;\n\tbackdrop-filter: blur(30px);\n}\nheader {\n\theight: 300px;\n\tdisplay: grid;\n\talign-content: center;\n\tbackground-color: black;\n}\np {\n\tline-height: 2;\n\tfont-size: 21px;\n\tfont-family: sans-serif;\n}\nnav {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tgap: 1rem;\n}\nnav div {\n\ttext-align: center;\n\tborder: 1px solid #000;\n\tflex: 1;\n\tfont-size: 21px;\n}\nfooter {\n\tdisplay: flex;\n\tgap: 1rem;\n\tbackground-color: black;\n\tcolor: white;\n}\nfooter div {\n\tmargin-bottom: 1rem;\n\t}\t\nheader, main, footer {\n\tpadding: 0 100px;\n}\n.active {\n\tbackground-color: #f66;\n}\n.meal {\n\tborder: 1px solid #000;\n\tmargin-top: 1rem;\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tgap: 1rem;\n\theight: 200px;\n\tbackground-color: hsla(0,0%,0%,.5);\n}\n.meal:last-child {\n\tmargin-bottom: 1rem;\n}\n\n.meal div {\n\tmargin-left: 1rem;\n}\nmain div div {\n\tdisplay: block;\n}\nmain div img {\n\theight: 100%;\n}\n@media screen and (max-width: 720px) {\n\theader, main, footer {\n\t\tpadding: .5rem;\n\t}\n\t.meal {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\theight: auto;\n\t}\n}"],sourceRoot:""}]);const u=l},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var d=this[c][0];null!=d&&(i[d]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);a&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},i=[],c=0;c<e.length;c++){var d=e[c],s=a.base?d[0]+a.base:d[0],l=r[s]||0,p="".concat(s," ").concat(l);r[s]=l+1;var u=n(p),A={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)t[u].references++,t[u].updater(A);else{var C=o(A,a);a.byIndex=c,t.splice(c,0,{identifier:p,updater:C,references:1})}i.push(p)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var c=n(r[i]);t[c].references--}for(var d=a(e,o),s=0;s<r.length;s++){var l=n(r[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=d}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,o&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},122:(e,t,n)=>{e.exports=n.p+"52874b7bf48c96dbf240.jpg"}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={id:a,exports:{}};return e[a](r,r.exports,n),r.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");if(a.length)for(var o=a.length-1;o>-1&&!e;)e=a[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),a=n(795),o=n.n(a),r=n(569),i=n.n(r),c=n(565),d=n.n(c),s=n(216),l=n.n(s),p=n(589),u=n.n(p),A=n(28),C={};C.styleTagTransform=u(),C.setAttributes=d(),C.insert=i().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=l(),t()(A.Z,C),A.Z&&A.Z.locals&&A.Z.locals;const m=JSON.parse('{"u2":"Fidelli","jZ":"This restaurant was created back in 1977 and it has been actively serving the best food in Mozambique.","uY":{"dY":"The Restaurant that Never Disappoints","tW":"Come to our beatiful restaurant and have the experience of your lifetime. We provide you with Fresh space to hang around and delicious meal to eat.","oG":"Classic with Tradition","y3":"Our restaurant dates back to 1977 when the legendary Mr. John, the chef, decided to cook his delicious meals to everyone in town.","Nm":"Delicious Meals","xh":"Every single meal served at Fidelli Restaurant comes with deliciousness. Fact: That\'s what we are famous for."},"WV":{"jZ":"About our Company","il":"We are a private Company specializing in food industry. Fidelli was first estabilished in 1977.","xh":"Location","Lk":["2212 Julius Nyerere Avenue","Polana CaniÃ§o","Maputo, Mozambique"]},"Rm":[{"name":"Rice","cost":"$ 7.99","url":"./images/rice.jpg"},{"name":"Pasta","cost":"$ 6.99","url":"./images/pasta.jpg"},{"name":"Hamburger","cost":"$ 5.99","url":"./images/hamburger.jpg"}]}'),f=function(){const e=document.createElement("main"),t=()=>document.createElement("h1"),n=()=>document.createElement("p"),a=t(),o=n(),r=t(),i=n(),c=t(),d=n();return a.textContent=m.uY.dY,o.textContent=m.uY.tW,r.textContent=m.uY.oG,i.textContent=m.uY.y3,c.textContent=m.uY.Nm,d.textContent=m.uY.xh,e.appendChild(a),e.appendChild(o),e.appendChild(r),e.appendChild(i),e.appendChild(c),e.appendChild(d),e},h=function(){const e=document.createElement("main"),t=()=>document.createElement("h1"),n=()=>document.createElement("p"),a=()=>document.createElement("div"),o=a(),r=t(),i=n();r.textContent=m.WV.jZ,i.textContent=m.WV.il,o.appendChild(r),o.appendChild(i);const c=a(),d=t();return d.textContent=m.WV.xh,c.appendChild(d),m.WV.Lk.forEach((function(e,t){const a=n();a.textContent=e,c.appendChild(a)})),e.appendChild(o),e.appendChild(c),e},g=n.p+"13ff01197bf9c0f83a24.jpg",b=n.p+"b10b7e363e0b701ca06a.jpg",v=n.p+"b3491c6154fe6c286817.jpg",y=function(){const e=document.createElement("main"),t=()=>document.createElement("div"),n=[g,v,b];return m.Rm.forEach(((a,o)=>{const r=t(),i=t(),c=document.createElement("h1"),d=document.createElement("p"),s=new Image;r.classList.add("meal"),c.textContent=a.name,d.textContent=a.cost,s.src=n[o],i.appendChild(c),i.appendChild(d),r.appendChild(i),r.appendChild(s),e.appendChild(r)})),e};document.body.appendChild(function(){const e=document.createElement("header"),t=document.createElement("nav"),n=e=>{let t=document.createElement("div");return t.textContent=e,t},a=n("Home"),o=n("Menu"),r=n("About"),i=document.createElement("h2");i.style.textAlign="center",i.textContent=m.u2,i.classList.add("crossPageTitle"),a.classList.add("active"),t.appendChild(a),t.appendChild(o),t.appendChild(r);const c=[{node:a,page:f},{node:o,page:y},{node:r,page:h}];return c.forEach((function(e,t){let n=e.node,a=e.page();n.addEventListener("click",(()=>{c.forEach((function(e,t){e.node.classList.remove("active")}));let e=document.querySelector("main"),t=document.querySelector("footer");document.body.removeChild(e),document.body.insertBefore(a,t),document.querySelector(".title"),n.classList.add("active")}))})),e.appendChild(t),e.appendChild(i),e}()),document.body.appendChild(f()),document.body.appendChild(function(){const e=document.createElement("footer"),t=document.createElement("div");return t.innerHTML=`<h1>About</h1>\n\t${m.jZ}`,e.appendChild(t),e}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,